-- 1757. Recyclable and Low Fat Products
SELECT product_id FROM Products
WHERE low_fats = 'Y' AND recyclable = 'Y'ï¼›

-- 584. Find Customer Referee
SELECT name FROM Customer
WHERE referee_id <> 2 OR referee_id IS NULL

-- 595. Big Countries
SELECT name, population, area 
FROM world
WHERE area >= 3000000 OR population >= 25000000

-- 1148. Article Views 1
SELECT DISTINCT author_id AS id
FROM views
WHERE author_id = viewer_id
ORDER BY id ASC

-- 1683. Invalid Tweets
SELECT tweet_id 
FROM tweets
WHERE LENGTH(content) > 15

-- 1378. Replace Employee ID With The Unique Identifier
SELECT eu.unique_id, e.name
FROM Employees e
LEFT JOIN EmployeeUNI eu
ON e.id = eu.id

-- 1068. Product Sales Analysis 1
SELECT p.product_name, s.year, s.price
FROM sales s
LEFT JOIN product p
ON s.product_id = p.product_id

-- 1581. Customer Who Visited but Did Not Make Any Transactions
SELECT v.customer_id, COUNT(v.customer_id) as count_no_trans
FROM Visits v
LEFT JOIN Transactions t
ON v.visit_id = t.visit_id
WHERE t.transaction_id IS NULL
GROUP BY v.customer_id

-- 197. Rising Temperature
SELECT w2.id
FROM weather w1 
JOIN weather w2 
ON DATEDIFF(w1.recordDate, w2.recordDate) = -1 AND w2.temperature > w1.temperature

-- 1661. Average Time of Process per Machine
SELECT a1.machine_id, ROUND(AVG(a2.timestamp - a1.timestamp),3) as processing_time
FROM activity a1
LEFT JOIN activity a2
ON a1.machine_id = a2.machine_id AND a1.process_id = a2.process_id
WHERE a1.activity_type = 'start' AND a2.activity_type = 'end'
GROUP BY a1.machine_id

-- 577. Employee Bonus
SELECT e.name, b.bonus
FROM employee e
LEFT JOIN bonus b
ON e.empId = b.empID
WHERE COALESCE(bonus, 0 ) < 1000
 
-- alternative: WHERE bonus < 1000 or bonus IS NULL

-- 1280. Students and Examinations
SELECT data.student_id, data.student_name, data.subject_name, COALESCE(subject.attended_exams,0) as attended_exams
FROM 
(SELECT student_id, subject_name, COUNT(subject_name) as attended_exams
FROM examinations
GROUP BY student_id, subject_name) as subject

RIGHT JOIN (
    SELECT *
    FROM students
    CROSS JOIN subjects
) as data
ON data.student_id = subject.student_id and data.subject_name = subject.subject_name
ORDER BY data.student_id, data.subject_name

-- 570. Managers with at Least 5 Direct Reports
SELECT b.id
FROM employee a
JOIN employee b
ON a.managerId = b.id
GROUP BY b.id, b.name
HAVING count(a.id)>5

-- 1934. Confirmation Rate
-- Solution 1
SELECT s.user_id, ROUND(COALESCE(SUM(CASE WHEN c.action = 'confirmed' THEN c.cnt ELSE 0 END) * 1/SUM(c.cnt),0),2) AS confirmation_rate
FROM signups s
LEFT JOIN 
(SELECT user_id, action, COUNT(action) AS cnt
FROM confirmations
GROUP BY user_id, action) AS c
ON s.user_id = c.user_id
GROUP BY s.user_id

-- Solution 2
SELECT s.user_id, ROUND(AVG(CASE WHEN c.action = 'confirmed' THEN 1 ELSE 0 END),2) as confirmation_rate
FROM signups s
LEFT JOIN confirmations c
ON s.user_id = c.user_id
GROUP BY s.user_id

-- 620. Not Boring Movies
SELECT * 
FROM cinema
WHERE description NOT LIKE 'boring' AND id % 2 <> 0
ORDER BY rating DESC

-- 1251. Average Selling Price
SELECT p.product_id, COALESCE(ROUND(SUM(p.price * u.units) /SUM(units),2),0) AS average_price
FROM prices p
LEFT JOIN UnitsSold u
ON p.product_id = u.product_id AND u.purchase_date BETWEEN p.start_date AND p.end_date
GROUP BY p.product_id
